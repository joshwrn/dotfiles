BPurple='\033[1;35m'
BYellow='\033[1;33m'
Color_Off='\033[0m' 

set -e

os_type="$(uname -s)"
apt_packages="curl git python3-pip zsh fzf neovim"
brew_packages="git python zsh fzf neovim"

# Detect OS and distro type
case "${os_type}" in
    Linux*)
        os_type="Linux"

        if [ !  -f "/etc/debian_version" ]; then
            no_system_packages
        fi

        ;;
    Darwin*) os_type="macOS";;
    *)
        os_type="Other"

        no_system_packages

        ;;
esac

# Install packages using your OS' package manager
function apt_install_packages {
    # shellcheck disable=SC2086
    sudo apt-get update && sudo apt-get install -y ${apt_packages}
}

function brew_install_self {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}
function brew_install_packages {
    [ -x "$(command -v brew > /dev/null 2>&1)" ] && brew_install_self

    # shellcheck disable=SC2086
    brew install ${brew_packages}
}

function display_packages {
    if [ "${os_type}" == "Linux" ]; then
        echo "${apt_packages}"
    else
        echo "${brew_packages}"
    fi
}

echo -e "${BPurple}Installing packages ðŸ“¦${Color_Off}"
echo -e "${BYellow}$(display_packages)${Color_Off}"

if [ "${os_type}" == "Linux" ]; then
    apt_install_packages
else
    brew_install_packages
fi

echo -e "${BPurple}Installing theme ðŸ’«${Color_Off}"

sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended || true
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k || true
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting || true

# install vim plug
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

# Clone dotfiles
echo -e "${BPurple}copying dotfiles ðŸ’Ž${Color_Off}"
clone_path="${clone_path:-"${HOME}/dotfiles"}"

# This is used to locally develop the install script.
if [ "${DEBUG}" == "1" ]; then
    cp -R "${PWD}/." "${clone_path}"
else
    git clone https://github.com/joshwrn/dotfiles "${clone_path}"
fi

rsync -a "${clone_path}/." "${HOME}"

# if on codespaces add yarn config to zsh

echo -e "${BPurple}Checking if user is on codespaces ðŸ”Ž${Color_Off}"

if [ "$USER" == "vscode" ]; then
    echo -e "${BPurple}Updating yarn dir in .zshrc ðŸ§¶${Color_Off}"
fi


    if [ "$USER" == "vscode" ]; then
        cat << EOF >> ${HOME}/.zshrc
DISABLE_AUTO_UPDATE=true
DISABLE_UPDATE_PROMPT=true
export PATH="/usr/local/go/bin:/usr/local/lib/nodejs/bin:/usr/local/lib/nodejs/node_modules/.bin:\$HOME/bin:\$PATH"
source /usr/local/nnn.quitcd.bash_zsh
export NNN_OPTS=deoaAHR
EOF
    fi


# Done!
echo -e "${BPurple}Success! Restart terminal to get started. ðŸš€${Color_Off}"
exit 0
