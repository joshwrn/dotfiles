#!/usr/bin/env bash

set -e

os_type="$(uname -s)"

apt_packages="curl git python3-pip zsh fzf neovim"

brew_packages="git python zsh fzf neovim"

###############################################################################
# Detect OS and distro type
###############################################################################

case "${os_type}" in
    Linux*)
        os_type="Linux"

        if [ !  -f "/etc/debian_version" ]; then
            no_system_packages
        fi

        ;;
    Darwin*) os_type="macOS";;
    *)
        os_type="Other"

        no_system_packages

        ;;
esac

###############################################################################
# Install packages using your OS' package manager
###############################################################################

function apt_install_packages {
    # shellcheck disable=SC2086
    sudo apt-get update && sudo apt-get install -y ${apt_packages}
}

function brew_install_self {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

function brew_install_packages {
    [ -x "$(command -v brew > /dev/null 2>&1)" ] && brew_install_self

    # shellcheck disable=SC2086
    brew install ${brew_packages}
}

function display_packages {
    if [ "${os_type}" == "Linux" ]; then
        echo "${apt_packages}"
    else
        echo "${brew_packages}"
    fi
}

cat << EOF
Installing packages 📦
$(display_packages)
EOF

if [ "${os_type}" == "Linux" ]; then
    apt_install_packages
else
    brew_install_packages
fi

function install_oh_my_zsh {
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended || true
}

cat << EOF
Installing theme 💫
EOF

install_oh_my_zsh

git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k || true

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting || true

###############################################################################
# Clone dotfiles
###############################################################################

cat << EOF
copying dotfiles 🧑‍💻
EOF

clone_path="${clone_path:-"${HOME}/dotfiles"}"

# This is used to locally develop the install script.
if [ "${DEBUG}" == "1" ]; then
    cp -R "${PWD}/." "${clone_path}"
else
    git clone https://github.com/joshwrn/dotfiles "${clone_path}"
fi

rsync -a "${clone_path}/." "${HOME}"

rm -rf .git

###############################################################################
# Done!
###############################################################################

cat << EOF
Success! Restart terminal to get started. 🚀
EOF

exit 0
